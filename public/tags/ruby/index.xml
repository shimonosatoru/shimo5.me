<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ruby on shimo</title>
    <link>https://shimo5.me/tags/ruby/</link>
    <description>Recent content in ruby on shimo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019. All rights reserved.</copyright>
    <lastBuildDate>Fri, 11 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://shimo5.me/tags/ruby/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaScriptのオブジェクトを触ってわかったSQLの削除の仕組み</title>
      <link>https://shimo5.me/post/2019-10-11/</link>
      <pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shimo5.me/post/2019-10-11/</guid>
      <description>結論 SQL構文にあるDELETE直後はデータをゴーストレコードとして設定し、データベース上には存在しているものの無効なレコードになっている。
そもそもなんでこんなこと調べたの？ 初心者向けのJavaScriptの学習教材を作成していました。 DBの代わりにJSオブジェクトを用いて、データのCRUD機能を実装していくというものです。 オブジェクトは下記のように定義しました。
var users = [ { id: 1, name: &#39;yamada&#39;, age: 21, job: &#39;student&#39; }, { id: 2, name: &#39;suzuki&#39;, age: 24, job: &#39;employee&#39; } ] CRUDなので当然DELETEも作成したのですが、その時事件は起きました。
VM501:1 Uncaught TypeError: Cannot read property &#39;id&#39; of undefined え&amp;hellip;？
該当コードはこちらでした。
function deleteUser(id) { // バリデーションは省略〜 // 対象ユーザーを検索 for (let i = 0; i &amp;lt; users.length; i++) { if (users[i].id === id) { // 削除 return delete users[i]; } } return &#39;対象のユーザーは見つかりませんでした。&#39;; } 対象ユーザーが見つかるまでループして探し、見つかったら削除するものでした。 最初の一回は実行したらうまくいったのですが、２回目からなぜかうまくいかなくなってしまいました。</description>
    </item>
    
    <item>
      <title>Rails:resourceとresourcesの違い</title>
      <link>https://shimo5.me/post/2019-09-02/</link>
      <pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shimo5.me/post/2019-09-02/</guid>
      <description>結論 resourcesは、複数のリソースに対するCRUD処理を行うためのルーティングを生成する。 resourceは、ただ１つのリソースに対するCRUD処理を行うためのルーティングを生成する。
どんなルーティングになるのか？ railsにはルーティングされているURI一覧を出力する機能があります。
$ rake routes それぞれどんなルーティングが出力されるのか見てみます。
resourcesの場合 resources :users  Prefix Verb URI Pattern Controller#Action users GET /users(.:format) users#index POST /users(.:format) users#create new_user GET /users/new(.:format) users#new edit_user GET /users/:id/edit(.:format) users#edit user GET /users/:id(.:format) users#show PATCH /users/:id(.:format) users#update PUT /users/:id(.:format) users#update DELETE /users/:id(.:format) users#destroy リソースが複数ある前提なので:idの指定があります。 新規作成や一覧取得には:idは必要ないので指定されていません。
resourceの場合 resource :users  Prefix Verb URI Pattern Controller#Action new_users GET /users/new(.:format) users#new edit_users GET /users/edit(.:format) users#edit users GET /users(.:format) users#show PATCH /users(.</description>
    </item>
    
  </channel>
</rss>